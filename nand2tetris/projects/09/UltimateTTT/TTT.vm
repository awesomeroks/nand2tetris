function TTT.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 150
pop this 0
push constant 32
pop this 1
push pointer 0
call TTT.drawGrid 1
pop temp 0
push constant 9
call Array.new 1
pop this 3
push pointer 0
return
function TTT.getCorrectSelection 0
push argument 0
pop pointer 0
push argument 1
push constant 9
lt
push argument 1
push constant 1
neg
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
return
goto IF_END0
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
goto IF_END1
label IF_FALSE1
push argument 1
push constant 8
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 8
return
label IF_FALSE2
label IF_END1
label IF_END0
push constant 4
return
function TTT.move 2
push argument 0
pop pointer 0
push pointer 0
call TTT.drawGrid 1
pop temp 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 132
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
call TTT.eraseMarker 2
pop temp 0
push pointer 0
push local 1
push constant 1
add
call TTT.getCorrectSelection 2
pop local 1
push pointer 0
push local 1
call TTT.drawMarker 2
pop temp 0
label IF_FALSE0
push local 0
push constant 130
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 1
call TTT.eraseMarker 2
pop temp 0
push pointer 0
push local 1
push constant 1
sub
call TTT.getCorrectSelection 2
pop local 1
push pointer 0
push local 1
call TTT.drawMarker 2
pop temp 0
label IF_FALSE1
push local 0
push constant 131
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 1
call TTT.eraseMarker 2
pop temp 0
push pointer 0
push local 1
push constant 3
sub
call TTT.getCorrectSelection 2
pop local 1
push pointer 0
push local 1
call TTT.drawMarker 2
pop temp 0
label IF_FALSE2
push local 0
push constant 133
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push local 1
call TTT.eraseMarker 2
pop temp 0
push pointer 0
push local 1
push constant 3
add
call TTT.getCorrectSelection 2
pop local 1
push pointer 0
push local 1
call TTT.drawMarker 2
pop temp 0
label IF_FALSE3
push local 0
push constant 128
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push local 1
call TTT.eraseMarker 2
pop temp 0
push pointer 0
push local 1
call TTT.isCorrectSelection 2
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push this 3
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 1
call TTT.drawX 2
pop temp 0
goto IF_END6
label IF_FALSE6
push local 1
push this 3
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 1
call TTT.drawO 2
pop temp 0
label IF_END6
push local 1
return
goto IF_END5
label IF_FALSE5
push pointer 0
push local 1
call TTT.drawMarker 2
pop temp 0
label IF_END5
label IF_FALSE4
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function TTT.isCorrectSelection 0
push argument 0
pop pointer 0
push argument 1
push this 3
add
pop pointer 1
push that 0
push constant 1
neg
eq
not
push argument 1
push this 3
add
pop pointer 1
push that 0
push constant 1
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function TTT.isGameOver 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
push constant 1
push constant 2
call TTT.checkLineXO 4
push pointer 0
push constant 3
push constant 4
push constant 5
call TTT.checkLineXO 4
or
push pointer 0
push constant 6
push constant 7
push constant 8
call TTT.checkLineXO 4
or
push pointer 0
push constant 0
push constant 3
push constant 6
call TTT.checkLineXO 4
or
push pointer 0
push constant 1
push constant 4
push constant 7
call TTT.checkLineXO 4
or
push pointer 0
push constant 2
push constant 5
push constant 8
call TTT.checkLineXO 4
or
push pointer 0
push constant 0
push constant 4
push constant 8
call TTT.checkLineXO 4
or
push pointer 0
push constant 2
push constant 4
push constant 6
call TTT.checkLineXO 4
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function TTT.checkLineXO 3
push argument 0
pop pointer 0
push argument 1
pop local 0
push argument 2
pop local 1
push argument 3
pop local 2
push argument 1
push this 3
add
pop pointer 1
push that 0
pop argument 1
push argument 2
push this 3
add
pop pointer 1
push that 0
pop argument 2
push argument 3
push this 3
add
pop pointer 1
push that 0
pop argument 3
push argument 1
push constant 0
eq
push argument 2
push constant 0
eq
or
push argument 3
push constant 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push argument 1
push argument 2
eq
push argument 2
push argument 3
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 0
push local 1
push local 2
call TTT.drawWinLine 4
pop temp 0
push constant 0
not
return
label IF_FALSE1
label IF_END0
push constant 0
return
function TTT.eraseMarker 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call TTT.getCorrectSelection 2
pop argument 1
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call TTT.drawMarker 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function TTT.drawO 4
push argument 0
pop pointer 0
push pointer 0
push argument 1
call TTT.getCorrectSelection 2
pop argument 1
push constant 150
pop local 0
push constant 0
pop local 1
push argument 1
push constant 3
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 2
push local 1
push constant 64
add
pop local 3
goto IF_END0
label IF_FALSE0
push argument 1
push constant 2
gt
push argument 1
push constant 6
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 3
sub
pop argument 1
push local 0
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 2
push local 1
push constant 2
push constant 64
call Math.multiply 2
add
pop local 3
goto IF_END1
label IF_FALSE1
push argument 1
push constant 5
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 6
sub
pop argument 1
push local 0
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 2
push local 1
push constant 3
push constant 64
call Math.multiply 2
add
pop local 3
label IF_FALSE2
label IF_END1
label IF_END0
push local 2
push local 3
push constant 20
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 2
push local 3
push constant 19
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function TTT.drawX 4
push argument 0
pop pointer 0
push pointer 0
push argument 1
call TTT.getCorrectSelection 2
pop argument 1
push constant 150
pop local 2
push constant 0
pop local 3
push argument 1
push constant 3
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 0
push local 3
push constant 64
add
pop local 1
goto IF_END0
label IF_FALSE0
push argument 1
push constant 2
gt
push argument 1
push constant 6
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 3
sub
pop argument 1
push local 2
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 0
push local 3
push constant 2
push constant 64
call Math.multiply 2
add
pop local 1
goto IF_END1
label IF_FALSE1
push argument 1
push constant 5
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 6
sub
pop argument 1
push local 2
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 0
push local 3
push constant 3
push constant 64
call Math.multiply 2
add
pop local 1
label IF_FALSE2
label IF_END1
label IF_END0
push local 0
push constant 15
sub
push local 1
push constant 15
add
push local 0
push constant 15
add
push local 1
push constant 15
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 15
add
push local 1
push constant 15
add
push local 0
push constant 15
sub
push local 1
push constant 15
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function TTT.drawMarker 9
push argument 0
pop pointer 0
push pointer 0
push argument 1
call TTT.getCorrectSelection 2
pop argument 1
push constant 150
pop local 7
push constant 0
pop local 8
push argument 1
push constant 3
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 7
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 4
push local 8
push constant 64
add
pop local 5
goto IF_END0
label IF_FALSE0
push argument 1
push constant 2
gt
push argument 1
push constant 6
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 3
sub
pop argument 1
push local 7
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 4
push local 8
push constant 2
push constant 64
call Math.multiply 2
add
pop local 5
goto IF_END1
label IF_FALSE1
push argument 1
push constant 5
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 6
sub
pop argument 1
push local 7
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 4
push local 8
push constant 3
push constant 64
call Math.multiply 2
add
pop local 5
label IF_FALSE2
label IF_END1
label IF_END0
push local 4
push constant 22
sub
pop local 0
push local 4
push constant 22
add
pop local 1
push local 5
push constant 22
add
pop local 2
push local 5
push constant 22
sub
pop local 3
push local 0
push local 2
push local 0
push local 3
call Screen.drawLine 4
pop temp 0
push local 0
push local 2
push local 1
push local 2
call Screen.drawLine 4
pop temp 0
push local 1
push local 2
push local 1
push local 3
call Screen.drawLine 4
pop temp 0
push local 1
push local 3
push local 0
push local 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function TTT.drawGrid 0
push argument 0
pop pointer 0
push this 0
push constant 64
add
push this 1
push this 0
push constant 64
add
push this 1
push constant 192
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 128
add
push this 1
push this 0
push constant 128
add
push this 1
push constant 192
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 1
push constant 64
add
push this 0
push constant 192
add
push this 1
push constant 64
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 1
push constant 128
add
push this 0
push constant 192
add
push this 1
push constant 128
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function TTT.drawLinesBetweenTwoSelections 7
push argument 0
pop pointer 0
push constant 150
pop local 5
push constant 0
pop local 6
push argument 1
push constant 3
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 5
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 0
push local 6
push constant 64
add
pop local 1
goto IF_END0
label IF_FALSE0
push argument 1
push constant 2
gt
push argument 1
push constant 6
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 3
sub
pop argument 1
push local 5
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 0
push local 6
push constant 2
push constant 64
call Math.multiply 2
add
pop local 1
goto IF_END1
label IF_FALSE1
push argument 1
push constant 5
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 6
sub
pop argument 1
push local 5
push argument 1
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 0
push local 6
push constant 3
push constant 64
call Math.multiply 2
add
pop local 1
label IF_FALSE2
label IF_END1
label IF_END0
push argument 2
push constant 3
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 5
push argument 2
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 2
push local 6
push constant 64
add
pop local 3
goto IF_END3
label IF_FALSE3
push argument 2
push constant 2
gt
push argument 2
push constant 6
lt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 2
push constant 3
sub
pop argument 2
push local 5
push argument 2
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 2
push local 6
push constant 2
push constant 64
call Math.multiply 2
add
pop local 3
goto IF_END4
label IF_FALSE4
push argument 2
push constant 5
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 2
push constant 6
sub
pop argument 2
push local 5
push argument 2
push constant 64
call Math.multiply 2
add
push constant 30
add
pop local 2
push local 6
push constant 3
push constant 64
call Math.multiply 2
add
pop local 3
label IF_FALSE5
label IF_END4
label IF_END3
push local 2
push local 3
push local 0
push local 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
function TTT.isDraw 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 9
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function TTT.drawWinLine 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call TTT.drawLinesBetweenTwoSelections 3
pop temp 0
push pointer 0
push argument 2
push argument 3
call TTT.drawLinesBetweenTwoSelections 3
pop temp 0
push constant 0
return
